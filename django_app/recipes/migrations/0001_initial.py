# Generated by Django 3.2.4 on 2021-06-22 20:26

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
                ('food_energy', models.DecimalField(blank=True, decimal_places=2, default=None, help_text='in kcal/g', max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='food energy')),
                ('alcohol_by_volume', models.DecimalField(blank=True, decimal_places=2, default=None, help_text='in %', max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='alcohol by volume')),
            ],
            options={
                'verbose_name': 'ingredient',
                'verbose_name_plural': 'ingredients',
                'db_table': 'ingredient',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Measure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'measure',
                'verbose_name_plural': 'measures',
                'db_table': 'measure',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
                ('cook_time', models.TimeField(blank=True, default=None, null=True, verbose_name='cook time')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('voter_turnout', models.PositiveSmallIntegerField(blank=True, default=None, null=True, verbose_name='voter turnout')),
                ('full_score', models.PositiveIntegerField(blank=True, default=None, null=True, verbose_name='full score')),
                ('rating', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('10'))], verbose_name='rating')),
                ('food_energy', models.DecimalField(blank=True, decimal_places=2, default=None, help_text='in kcal/g', max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='food energy')),
                ('alcohol_by_volume', models.DecimalField(blank=True, decimal_places=2, default=None, help_text='in %', max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='alcohol by volume')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipes', to=settings.AUTH_USER_MODEL, verbose_name='author')),
            ],
            options={
                'verbose_name': 'recipe',
                'verbose_name_plural': 'recipes',
                'db_table': 'recipe',
                'ordering': ['rating', 'name'],
            },
        ),
        migrations.CreateModel(
            name='RecipeCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'recipe category',
                'verbose_name_plural': 'recipe categories',
                'db_table': 'recipe_category',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='RecipeIngredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=9, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='amount')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipe_ingredients', to=settings.AUTH_USER_MODEL, verbose_name='author')),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipe_ingredients', to='recipes.ingredient', verbose_name='ingredient')),
                ('measure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipe_ingredients', to='recipes.measure', verbose_name='measure')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipe_ingredients', to='recipes.recipe', verbose_name='recipe')),
            ],
            options={
                'verbose_name': 'recipe ingredient',
                'verbose_name_plural': 'recipe ingredients',
                'db_table': 'recipe_ingredient',
                'ordering': ['ingredient'],
            },
        ),
        migrations.AddField(
            model_name='recipe',
            name='recipe_category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipes', to='recipes.recipecategory', verbose_name='recipe category'),
        ),
        migrations.CreateModel(
            name='UserRecipeScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.PositiveSmallIntegerField(help_text='from 1 to 10', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='score')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_recipe_ratings', to='recipes.recipe', verbose_name='recipe')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_recipe_ratings', to=settings.AUTH_USER_MODEL, verbose_name='users')),
            ],
            options={
                'verbose_name': 'user recipe score',
                'verbose_name_plural': 'user recipe scores',
                'db_table': 'user_recipe_rating',
                'ordering': ['score', 'recipe'],
                'unique_together': {('user', 'recipe')},
            },
        ),
    ]
